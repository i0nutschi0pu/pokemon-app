{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../pokemon-crud.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\n\nfunction PokemonSearchComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\")(1, \"a\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const pokemon_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"/detail/\", pokemon_r2, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", pokemon_r2, \" \");\n  }\n}\n\nexport class PokemonSearchComponent {\n  constructor(pokemonCRUDService) {\n    this.pokemonCRUDService = pokemonCRUDService;\n    this.searchTerms = new Subject();\n  } // Push a search term into the observable stream.\n\n\n  search(term) {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit() {\n    this.pokemons$ = this.searchTerms.pipe( // wait 300ms after each keystroke before considering the term\n    debounceTime(300), // ignore new term if same as previous term\n    distinctUntilChanged(), // switch to new search observable each time the term changes\n    switchMap(term => this.pokemonCRUDService.searchPokemons(term))); // console.log(this.pokemons$);\n    // this.pokemons$.forEach(item2 => {\n    //   console.log(item2);\n    //   // res.push(item.results);\n    //   // item.results.forEach(childrenEntry => { // was missing a )\n    //   //          list.push({name: childrenEntry.name, url: childrenEntry.url});\n    //   // });\n    // });\n  }\n\n}\n\nPokemonSearchComponent.ɵfac = function PokemonSearchComponent_Factory(t) {\n  return new (t || PokemonSearchComponent)(i0.ɵɵdirectiveInject(i1.PokemonCRUDService));\n};\n\nPokemonSearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PokemonSearchComponent,\n  selectors: [[\"app-pokemon-search\"]],\n  decls: 10,\n  vars: 3,\n  consts: [[1, \"form-inline\", \"my-2\", \"my-lg-0\", 2, \"float\", \"right\"], [\"id\", \"search-component\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", \"type\", \"search\", \"placeholder\", \"Search\", 1, \"form-control\", \"mr-sm-2\", 3, \"keypress.enter\"], [\"searchBox\", \"\"], [1, \"search-result\"], [4, \"ngFor\", \"ngForOf\"], [3, \"routerLink\"]],\n  template: function PokemonSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Pokemon Search\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 3, 4);\n      i0.ɵɵlistener(\"keypress.enter\", function PokemonSearchComponent_Template_input_keypress_enter_4_listener() {\n        i0.ɵɵrestoreView(_r3);\n\n        const _r0 = i0.ɵɵreference(5);\n\n        return i0.ɵɵresetView(ctx.search(_r0.value));\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"ul\", 5);\n      i0.ɵɵtemplate(7, PokemonSearchComponent_li_7_Template, 3, 2, \"li\", 6);\n      i0.ɵɵpipe(8, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(9, \" --> \");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 1, ctx.pokemons$));\n    }\n  },\n  dependencies: [i2.NgForOf, i3.RouterLinkWithHref, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwb2tlbW9uLXNlYXJjaC5jb21wb25lbnQuY3NzIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAArB,QAAoC,MAApC;AAEA,SACGC,YADH,EACiBC,oBADjB,EACuCC,SADvC,QAEQ,gBAFR;;;;;;;;ICqBQC,2BAA+C,CAA/C,EAA+C,GAA/C,EAA+C,CAA/C;IAIIA;IACFA;;;;;IAFGA;IAAAA;IACDA;IAAAA;;;;ADbZ,OAAM,MAAOC,sBAAP,CAA6B;EAKjCC,YAAoBC,kBAApB,EAA0D;IAAtC;IAFZ,mBAAc,IAAIP,OAAJ,EAAd;EAEsD,CAL7B,CAOjC;;;EACAQ,MAAM,CAACC,IAAD,EAAa;IACjB,KAAKC,WAAL,CAAiBC,IAAjB,CAAsBF,IAAtB;EACD;;EAEDG,QAAQ;IACN,KAAKC,SAAL,GAAiB,KAAKH,WAAL,CAAiBI,IAAjB,EACf;IACAb,YAAY,CAAC,GAAD,CAFG,EAIf;IACAC,oBAAoB,EALL,EAOf;IACAC,SAAS,CAAEM,IAAD,IAAkB,KAAKF,kBAAL,CAAwBQ,cAAxB,CAAuCN,IAAvC,CAAnB,CARM,CAAjB,CADM,CAYN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACD;;AAhCgC;;;mBAAtBJ,wBAAsBD;AAAA;;;QAAtBC;EAAsBW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCDnChB,gCAA6D,CAA7D,EAA6D,KAA7D,EAA6D,CAA7D,EAA6D,CAA7D,EAA6D,OAA7D,EAA6D,CAA7D;MAE8BA;MAAcA;MACtCA;MAAmCA;QAAAA;;QAAA;;QAAA,OAAkBA,qCAAlB;MAAyC,CAAzC;MAAnCA;MAMAA;MACEA;;MAQFA;MACAA;MAEJA;;;;MAX8BA;MAAAA","names":["Subject","debounceTime","distinctUntilChanged","switchMap","i0","PokemonSearchComponent","constructor","pokemonCRUDService","search","term","searchTerms","next","ngOnInit","pokemons$","pipe","searchPokemons","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ionut/pokemon_app/src/app/components/pokemon-search/pokemon-search.component.ts","/Users/ionut/pokemon_app/src/app/components/pokemon-search/pokemon-search.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Pokemon } from '../../pokemon.model';\nimport { PokemonCRUDService } from '../../pokemon-crud.service';\n\n@Component({\n  selector: 'app-pokemon-search',\n  templateUrl: './pokemon-search.component.html',\n  styleUrls: ['./pokemon-search.component.css']\n})\nexport class PokemonSearchComponent implements OnInit {\n\n  pokemons$!: Observable<Pokemon[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private pokemonCRUDService: PokemonCRUDService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.pokemons$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.pokemonCRUDService.searchPokemons(term)),\n    );\n\n    // console.log(this.pokemons$);\n    // this.pokemons$.forEach(item2 => {\n    //   console.log(item2);\n    //   // res.push(item.results);\n    //   // item.results.forEach(childrenEntry => { // was missing a )\n    //   //          list.push({name: childrenEntry.name, url: childrenEntry.url});\n    //   // });\n    // });\n  }\n\n}\n","\n\n<!--\n<div class=\"navbar\" style=\"float: right; font-size: 16px;  \">\n  <form class=\"form-inline my-2 my-lg-0\" style=\"padding-top: 7px\">\n    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\">\n  </form>\n</div>\n\n-->\n\n\n\n\n\n<form class=\"form-inline my-2 my-lg-0\" style=\"float: right;\">\n  <div id=\"search-component\" >\n      <label for=\"search-box\">Pokemon Search</label>\n      <input #searchBox id=\"search-box\"  (keypress.enter)=\"search(searchBox.value)\" \n        class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"/>\n\n\n\n\n      <ul class=\"search-result\">\n        <li *ngFor=\"let pokemon of pokemons$ | async\" >\n\n         \n          <a routerLink=\"/detail/{{pokemon}}\">\n            {{pokemon}}\n          </a>\n        \n        </li>\n      </ul>\n      -->\n\n  </div>\n</form>\n\n\n\n\n\n\n<!-- \n<div id=\"search-component\">\n  <label for=\"search-box\">Hero Search</label>\n  <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n\n  <ul class=\"search-result\">\n      \n    <li *ngFor=\"let pokemon of pokemons$ | async\" >\n      <a routerLink=\"/detail/{{pokemon.id}}\">\n        {{pokemon.name}}\n      </a>\n    </li>\n    \n  </ul>\n\n</div>\n\n-->"]},"metadata":{},"sourceType":"module"}