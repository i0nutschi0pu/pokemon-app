{"ast":null,"code":"import { Subject } from 'rxjs/internal/Subject';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../pokemon-crud.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../pokemon-search/pokemon-search.component\";\nimport * as i5 from \"../pokemon-evolution/pokemon-evolution.component\";\nimport * as i6 from \"../pokemon-damage/pokemon-damage.component\";\nimport * as i7 from \"../../menu/menu.component\";\nfunction DetailsComponent_div_8_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32)(1, \"h3\", 33);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const type_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵstyleMapInterpolate1(\"background-color: \", ctx_r1.pokemonColor, \";\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleMapInterpolate1(\"background-color: \", type_r4.color, \";\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 7, type_r4.name), \" \");\n  }\n}\nfunction DetailsComponent_div_8_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34)(1, \"div\", 28)(2, \"div\", 2);\n    i0.ɵɵelement(3, \"img\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 2)(5, \"h3\", 36);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 37)(8, \"div\", 38)(9, \"div\", 39);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const statistics_r5 = ctx.$implicit;\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\"\", statistics_r5.name, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵattributeInterpolate1(\"style\", \"width: \", statistics_r5.base_stat, \"%;\", i0.ɵɵsanitizeStyle)(\"aria-valuenow\", \" \", statistics_r5.base_stat, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", statistics_r5.base_stat, \"%\");\n  }\n}\nfunction DetailsComponent_div_8_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34)(1, \"div\", 40);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ability_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ability_r6.name, \" - \");\n  }\n}\nfunction DetailsComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵelement(5, \"div\", 9);\n    i0.ɵɵtemplate(6, DetailsComponent_div_8_div_6_Template, 4, 9, \"div\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵelement(8, \"img\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, DetailsComponent_div_8_div_9_Template, 11, 4, \"div\", 12);\n    i0.ɵɵelementStart(10, \"div\")(11, \"div\")(12, \"h4\", 13);\n    i0.ɵɵtext(13, \"Profile\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"h2\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 14)(17, \"div\", 15)(18, \"h6\");\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"h6\");\n    i0.ɵɵtext(21, \"Catch rate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"h6\");\n    i0.ɵɵtext(23, \"Egg groups\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"h6\");\n    i0.ɵɵtext(25, \"Abilities: \");\n    i0.ɵɵtemplate(26, DetailsComponent_div_8_span_26_Template, 3, 1, \"span\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"div\", 15)(28, \"h6\");\n    i0.ɵɵtext(29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"h6\");\n    i0.ɵɵtext(31, \"Gender ration\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"h6\");\n    i0.ɵɵtext(33, \"Hatch steps\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"h6\");\n    i0.ɵɵtext(35, \"EVs\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(36, \"div\", 16)(37, \"h4\", 17);\n    i0.ɵɵtext(38, \"Evolutions\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"div\", 18);\n    i0.ɵɵelement(40, \"div\", 19);\n    i0.ɵɵelementStart(41, \"div\", 2);\n    i0.ɵɵelement(42, \"img\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"div\", 21);\n    i0.ɵɵelement(44, \"app-pokemon-evolution\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(45, \"div\", 22)(46, \"h5\", 23);\n    i0.ɵɵtext(47);\n    i0.ɵɵpipe(48, \"uppercase\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(49, \"div\", 24)(50, \"h4\", 25);\n    i0.ɵɵtext(51, \"Damage when attacked\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"div\", 26);\n    i0.ɵɵelement(53, \"app-pokemon-damage\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(54, \"div\", 27)(55, \"div\", 28);\n    i0.ɵɵelement(56, \"div\", 29);\n    i0.ɵɵelementStart(57, \"div\", 30)(58, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function DetailsComponent_div_8_Template_button_click_58_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.goBack());\n    });\n    i0.ɵɵtext(59, \"go back\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(60, \"div\", 29);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 10, ctx_r0.pokemon.name));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pokemonTypes);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.pokemonImg, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pokemonStatistics);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.pokemonType, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Height: \", ctx_r0.pokemon.height, \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.pokemonAbs);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Weight: \", ctx_r0.pokemon.weight, \" \");\n    i0.ɵɵadvance(13);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.pokemonImg, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 12, ctx_r0.pokemon.name));\n  }\n}\nexport class DetailsComponent {\n  constructor(route, pokemonService, location) {\n    this.route = route;\n    this.pokemonService = pokemonService;\n    this.location = location;\n    this.pokemonAbs = [];\n    this.pokeAb = {};\n    this.pokemonTypes = [];\n    this.pokemonStatistics = [];\n  }\n  ngOnInit() {\n    this.getPokemon();\n    this.getPokemonAbilities();\n    // this.getPokCol();\n    this.getPokemonStatistics();\n    this.getPokCol();\n    // console.log(this.getPokemonId());\n    // this.getPokemonEvolution();\n  }\n\n  getPokemonId() {\n    return parseInt(this.route.snapshot.paramMap.get('id'), 10);\n  }\n  // getPokemonEvolution()\n  // {\n  //   this.pokemonService.getEvolutionDetails(this.getPokemonId())\n  //     .subscribe( (pokemon) => { \n  //      this.pokemon = pokemon;\n  //     // console.log(pokemon)\n  //    });\n  // }\n  // getPokemon(types: { name: string; color: string}[]): void \n  getPokemon() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    // console.log(types);\n    this.pokemonService.getPokemon(id).subscribe(pokemon => {\n      this.pokemon = pokemon;\n      //  console.log(pokemon.types);\n      this.pokemonService.getPokemonColor().subscribe(pokemonTypes => {\n        // console.log(pokemonTypes);\n        pokemon.types.forEach((itemsV, innerIdx) => {\n          // console.log(itemsV.type.name);\n          // console.log(pokemonTypes.name);\n          // console.log(pokemonTypes.find((e: { name: string; }) => e.name === itemsV.type.name));\n          this.pokemonTypes.push(pokemonTypes.find(e => e.name === itemsV.type.name));\n          // console.log(pokemonTypes.name.includes(itemsV.type.name));\n        });\n      });\n      //  types.forEach((itemsV: any, innerIdx: any) =>{\n      // });\n      // console.log(pokemon)\n    });\n  }\n\n  getPokemonStatistics() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.pokemonService.getPokemon(id).subscribe(pokemon => {\n      this.pokemonImg = String(pokemon.sprites.front_default);\n      pokemon.stats.forEach(items => {\n        for (const [key, value] of Object.entries(items['stat'])) {\n          if (key === 'name') {\n            this.pokemonStatistics.push({\n              name: String(value),\n              base_stat: Number(items['base_stat'])\n            });\n          }\n        }\n      });\n    });\n  }\n  getPokemonAbilities() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.pokemonService.getPokemon(id).subscribe(pokemon => {\n      pokemon.abilities.forEach(items => {\n        for (const [key, value] of Object.entries(items['ability'])) {\n          if (key === 'name') {\n            this.pokemonAbs.push({\n              name: String(value)\n            });\n          }\n        }\n      });\n    });\n  }\n  getPokCol() {\n    var subject = new Subject();\n    let pokemonTps;\n    // console.log(this.pokemonService.getPokemonColor());\n    // let colors = ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \n    //   'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', 'red', \n    //   'silver', 'teal', 'white', 'yellow', 'brown', 'magenta', 'kaki'];\n    // this.pokemonService.getPokemonColor().subscribe((data: { results: any; forEach: (arg0: (data: any) => void) => void; }) => {\n    // this.pokemonService.getPokemonColor().subscribe( (data: any) => {\n    //       // console.log(data);\n    //       // data.results.forEach((itemsV: any, innerIdx: any) =>{\n    //       //   this.pokemonTypes.push(\n    //       //       {\n    //       //         name: itemsV.name,\n    //       //         color: colors[innerIdx]\n    //       //       }\n    //       //   );\n    //       //   pokemonTps = this.pokemonTypes;\n    //       //   subject.next(pokemonTps);\n    //       // });\n    // });\n    return subject.asObservable();\n  }\n  // getPokemonType(): any\n  // {\n  //   const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n  //   let colors = ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \n  //     'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', 'red', \n  //     'silver', 'teal', 'white', 'yellow', 'brown', 'magenta', 'kaki'];\n  //   /*\n  //      I declared this default type in order to show the functionality, although \n  //      I could also check in the template if type type exists in the array of types and then assgin \n  //      a random color;\n  //   */\n  //   // let type = 'poison';\n  //   this.pokemonService.getPokemon(id)\n  //     .subscribe( (pokemon)  => {\n  //       pokemon.types.forEach( (itemsV: {type: any}, innerIdx) => {\n  //         // console.log(itemsV);\n  //         // console.log(innerIdx);\n  //         this.pokemonTypes.push(\n  //               {\n  //                 name: itemsV.type.name,\n  //                 color: colors[Math.floor(Math.random() * colors.length)]\n  //               }\n  //           );\n  //       //   type = items.type.name;\n  //       //  return type;\n  //     });\n  //    });\n  //     // return type;\n  // }\n  goBack() {\n    this.location.back();\n  }\n  static #_ = this.ɵfac = function DetailsComponent_Factory(t) {\n    return new (t || DetailsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PokemonCRUDService), i0.ɵɵdirectiveInject(i3.Location));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailsComponent,\n    selectors: [[\"app-details\"]],\n    decls: 9,\n    vars: 1,\n    consts: [[\"id\", \"pokemon-details\", 1, \"row\", \"gray-bck\"], [1, \"col-lg-8\"], [1, \"col-lg-4\"], [\"role\", \"main\", 1, \"container\"], [1, \"my-3\", \"p-3\", \"bg-white\", \"rounded\", \"box-shadow\"], [1, \"media\", \"text-muted\", \"pt-3\"], [4, \"ngIf\"], [1, \"text-center\", \"text-white\", \"mb-5\", \"p-2\", 2, \"background-color\", \"green\"], [1, \"row\", \"ml-0\", \"pb-4\"], [1, \"col-lg-12\"], [\"class\", \"box mr-4\", 3, \"style\", 4, \"ngFor\", \"ngForOf\"], [1, \"imgWH\", 3, \"src\"], [\"class\", \"box\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-left\", \"text-white\", \"mb-5\", \"mt-5\", \"p-2\", 2, \"background-color\", \"green\"], [1, \"row\", \"pl-4\"], [1, \"col-lg-6\"], [1, \"row\", \"pl-2\", \"mt-5\", \"mb-5\"], [1, \"text-left\", \"p-2\", \"text-white\", \"col-12\", 2, \"background-color\", \"green\"], [1, \"row\", \"ml-5\", \"pl-5\"], [1, \"col-lg-2\"], [1, \"\", 3, \"src\"], [1, \"mt-4\", \"col-6\"], [1, \"col-lg-6\", \"mt-4\"], [1, \"text-right\"], [1, \"row\", \"mt-5\", \"mb-5\"], [1, \"text-left\", \"text-white\", \"p-2\", \"col-12\", 2, \"background-color\", \"green\"], [1, \"row\", \"mt-5\"], [1, \"mt-5\"], [1, \"row\"], [1, \"col-5\"], [1, \"col-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\", 3, \"click\"], [1, \"box\", \"mr-4\"], [1, \"col-lg-12\", \"text-white\"], [1, \"box\"], [\"src\", \"\"], [1, \"\"], [1, \"col-lg-3\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"bg-success\"], [\"id\", \"container\", 1, \"center-display\"]],\n    template: function DetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"app-menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelement(4, \"app-pokemon-search\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"main\", 3)(6, \"div\", 4)(7, \"div\", 5);\n        i0.ɵɵtemplate(8, DetailsComponent_div_8_Template, 61, 14, \"div\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.pokemon);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.PokemonSearchComponent, i5.PokemonEvolutionComponent, i6.PokemonDamageComponent, i7.MenuComponent, i3.UpperCasePipe],\n    styles: [\".grass[_ngcontent-%COMP%] {\\n    background-color: red;\\n}\\n\\n.imgWH[_ngcontent-%COMP%]{\\n    width:140px; height:129px;\\n}\\n\\n.center-display[_ngcontent-%COMP%]{\\n    width: 60%; margin: 0 auto; display: inline;\\n}\\n\\n#pokemon-details[_ngcontent-%COMP%]{\\n    background-color: #333 !important;\\n}\\n\\n.media[_ngcontent-%COMP%]{\\n    display: block !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wb2tlbW9ucy9kZXRhaWxzL2RldGFpbHMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLFdBQVcsRUFBRSxZQUFZO0FBQzdCOztBQUVBO0lBQ0ksVUFBVSxFQUFFLGNBQWMsRUFBRSxlQUFlO0FBQy9DOztBQUVBO0lBQ0ksaUNBQWlDO0FBQ3JDOztBQUVBO0lBQ0kseUJBQXlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiLmdyYXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5pbWdXSHtcbiAgICB3aWR0aDoxNDBweDsgaGVpZ2h0OjEyOXB4O1xufVxuXG4uY2VudGVyLWRpc3BsYXl7XG4gICAgd2lkdGg6IDYwJTsgbWFyZ2luOiAwIGF1dG87IGRpc3BsYXk6IGlubGluZTtcbn1cblxuI3Bva2Vtb24tZGV0YWlsc3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzICFpbXBvcnRhbnQ7XG59XG5cbi5tZWRpYXtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Subject","i0","DetailsComponent","constructor","route","pokemonService","location","ngOnInit","getPokemon","getPokemonAbilities","getPokemonStatistics","getPokCol","getPokemonId","parseInt","snapshot","paramMap","get","id","subscribe","pokemon","getPokemonColor","pokemonTypes","types","forEach","itemsV","innerIdx","push","find","e","name","type","pokemonImg","String","sprites","front_default","stats","items","key","value","Object","entries","pokemonStatistics","base_stat","Number","abilities","pokemonAbs","subject","pokemonTps","asObservable","goBack","back","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ionut/pokemon_app/src/app/components/pokemons/details/details.component.ts","/Users/ionut/pokemon_app/src/app/components/pokemons/details/details.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Pokemon } from '../../../pokemon.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { PokemonCRUDService } from '../../../pokemon-crud.service';\nimport { Subject } from 'rxjs/internal/Subject';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  pokemon: Pokemon | undefined;\n  pokemonBackgroundColor!: string; \n  pokemonType!: string;\n  test!: number;\n  pokemonAbs: { name: string;}[] = [];\n  pokeAb: any = {};\n  pokemonColor!: string;\n  pokemonTypes: { name: string; color: string}[] = [];\n  pokemonStatistics: { name: string; base_stat: number;}[] = [];\n  pokemonImg!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private pokemonService: PokemonCRUDService,\n    private location: Location\n  ) {}\n\n  ngOnInit(): void {\n    this.getPokemon();\n    this.getPokemonAbilities();\n    // this.getPokCol();\n    this.getPokemonStatistics();\n\n    this.getPokCol();\n    // console.log(this.getPokemonId());\n    // this.getPokemonEvolution();\n  }\n\n  getPokemonId(): number\n  {\n    return parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n  }\n\n  // getPokemonEvolution()\n  // {\n  //   this.pokemonService.getEvolutionDetails(this.getPokemonId())\n  //     .subscribe( (pokemon) => { \n\n  //      this.pokemon = pokemon;\n  //     // console.log(pokemon)\n  //    });\n  // }\n\n  // getPokemon(types: { name: string; color: string}[]): void \n  getPokemon(): void \n  {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n    // console.log(types);\n    this.pokemonService.getPokemon(id)\n      .subscribe( (pokemon) => { \n\n       this.pokemon = pokemon;\n      //  console.log(pokemon.types);\n\n       this.pokemonService.getPokemonColor().subscribe( (pokemonTypes: any) => {\n        \n          // console.log(pokemonTypes);\n          pokemon.types.forEach((itemsV: any, innerIdx: any) =>{\n              // console.log(itemsV.type.name);\n              // console.log(pokemonTypes.name);\n              // console.log(pokemonTypes.find((e: { name: string; }) => e.name === itemsV.type.name));\n\n              this.pokemonTypes.push(\n                pokemonTypes.find((e: { name: string; }) => e.name === itemsV.type.name)\n              );\n\n              // console.log(pokemonTypes.name.includes(itemsV.type.name));\n\n          });\n        });\n\n      //  types.forEach((itemsV: any, innerIdx: any) =>{\n        \n        \n      // });\n      // console.log(pokemon)\n     });\n  }\n\n  getPokemonStatistics()\n  {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n\n    this.pokemonService.getPokemon(id)\n      .subscribe( (pokemon) => {\n\n        this.pokemonImg = String(pokemon.sprites.front_default)\n\n       pokemon.stats.forEach(items => {\n            for (const [key, value] of Object.entries(items['stat'])) { \n\n               if(key === 'name'){\n                 this.pokemonStatistics.push(\n                   {\n                     name: String(value),\n                     base_stat: Number(items['base_stat'])\n                   }\n               );\n              }\n              \n            }\n      });\n     });\n  }\n\n  getPokemonAbilities()\n  {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n\n    this.pokemonService.getPokemon(id)\n      .subscribe( (pokemon) => {\n\n       pokemon.abilities.forEach(items => {\n            for (const [key, value] of Object.entries(items['ability'])) { \n              if(key === 'name'){\n                this.pokemonAbs.push(\n                  {\n                    name: String(value),\n                  }\n              );\n              }\n              \n            }\n      });\n     });\n  }\n\n  getPokCol()\n  {\n\n    var subject = new Subject<{ name: string; color: string}[]>();\n    let pokemonTps: { name: string; color: string}[];\n    // console.log(this.pokemonService.getPokemonColor());\n\n\n    // let colors = ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \n    //   'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', 'red', \n    //   'silver', 'teal', 'white', 'yellow', 'brown', 'magenta', 'kaki'];\n\n    // this.pokemonService.getPokemonColor().subscribe((data: { results: any; forEach: (arg0: (data: any) => void) => void; }) => {\n\n    // this.pokemonService.getPokemonColor().subscribe( (data: any) => {\n        \n    //       // console.log(data);\n    //       // data.results.forEach((itemsV: any, innerIdx: any) =>{\n\n    //       //   this.pokemonTypes.push(\n    //       //       {\n    //       //         name: itemsV.name,\n    //       //         color: colors[innerIdx]\n    //       //       }\n    //       //   );\n    //       //   pokemonTps = this.pokemonTypes;\n\n    //       //   subject.next(pokemonTps);\n            \n    //       // });\n    // });\n\n    return subject.asObservable();\n  }\n\n\n  // getPokemonType(): any\n  // {\n  //   const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n  //   let colors = ['aqua', 'black', 'blue', 'fuchsia', 'gray', 'green', \n  //     'lime', 'maroon', 'navy', 'olive', 'orange', 'purple', 'red', \n  //     'silver', 'teal', 'white', 'yellow', 'brown', 'magenta', 'kaki'];\n\n  //   /*\n  //      I declared this default type in order to show the functionality, although \n  //      I could also check in the template if type type exists in the array of types and then assgin \n  //      a random color;\n  //   */\n\n\n  //   // let type = 'poison';\n\n  //   this.pokemonService.getPokemon(id)\n  //     .subscribe( (pokemon)  => {\n\n  //       pokemon.types.forEach( (itemsV: {type: any}, innerIdx) => {\n  //         // console.log(itemsV);\n  //         // console.log(innerIdx);\n  //         this.pokemonTypes.push(\n  //               {\n  //                 name: itemsV.type.name,\n  //                 color: colors[Math.floor(Math.random() * colors.length)]\n  //               }\n  //           );\n  //       //   type = items.type.name;\n          \n  //       //  return type;\n  //     });\n  //    });\n\n  //     // return type;\n  // }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n","\n\n\n<!-- move inline css to file-->\n<div id=\"pokemon-details\" class=\"row gray-bck\">\n  <div class=\"col-lg-8\">\n    <app-menu></app-menu>\n  </div>\n  <div class=\"col-lg-4\">\n    <app-pokemon-search></app-pokemon-search>\n  </div>\n</div>\n<main role=\"main\" class=\"container\">\n  <!-- <div class=\"d-flex align-items-center p-3 my-3 text-white-50 bg-purple rounded box-shadow\">\n    <img class=\"mr-3\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-outline.svg\" alt=\"\" width=\"48\" height=\"48\">\n    <div class=\"lh-100\">\n      <h6 class=\"mb-0 text-white lh-100\">Bootstrap</h6>\n      <small>Since 2011</small>\n    </div>\n  </div> -->\n\n  <div class=\"my-3 p-3 bg-white rounded box-shadow\">\n     <div class=\"media text-muted pt-3\">\n      <div *ngIf=\"pokemon\">\n        <h2 class=\"text-center text-white mb-5 p-2\" style=\"background-color: green;\">{{pokemon.name | uppercase}}</h2>\n        <div class=\"row ml-0 pb-4\">\n          <div class=\"col-lg-12\"></div>\n          <div *ngFor=\"let type of pokemonTypes\" class=\"box mr-4\" style=\"background-color: {{pokemonColor}};\">\n            <h3 class=\"col-lg-12 text-white\" style=\"background-color: {{type.color }};\">{{type.name | uppercase }} </h3>\n          </div>\n        </div>\n        <div>\n          <img src=\"{{pokemonImg}}\" class=\"imgWH\" />\n          \n        </div>\n        <div *ngFor=\"let statistics of pokemonStatistics\" class=\"box\">\n          <div class=\"row\">\n            <div class=\"col-lg-4\">\n              <img src=\"\" />\n            </div>\n            <div class=\"col-lg-4\">\n              <h3 class=\"\">{{statistics.name }} </h3>\n            </div>\n            <div class=\"col-lg-3\">\n              <div class=\"progress\">\n                <div class=\"progress-bar bg-success\" role=\"progressbar\" attr.style=\"width: {{statistics.base_stat}}%;\"\n                  attr.aria-valuenow=\" {{statistics.base_stat}} \" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                  {{statistics.base_stat}}%</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div>\n            <h4 class=\"text-left text-white mb-5 mt-5 p-2\" style=\"background-color:green;\">Profile</h4>\n            <h2> {{pokemonType}} </h2>\n            <div class=\"row pl-4\">\n              <div class=\"col-lg-6\">\n                <h6>Height: {{pokemon.height}}</h6>\n                <h6>Catch rate</h6>\n                <h6>Egg groups</h6>\n                <h6>Abilities:\n                  <span *ngFor=\"let ability of pokemonAbs\" class=\"box\">\n                    <div class=\"center-display\" id=\"container\"> {{ability.name}} - </div>\n                  </span>\n                </h6>\n              </div>\n              <div class=\"col-lg-6\">\n                <h6 >Weight: {{pokemon.weight}} </h6>\n                <h6>Gender ration</h6>\n                <h6>Hatch steps</h6>\n                <h6>EVs</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"row pl-2 mt-5 mb-5\">\n          <h4 class=\"text-left p-2 text-white col-12\" style=\"background-color: green;\">Evolutions</h4>\n          <div class=\"row ml-5 pl-5\">\n            <div class=\"col-lg-2\"></div>\n      \n            \n              \n            <div class=\"col-lg-4\">\n              <img src=\"{{pokemonImg}}\"  class=\" \" /> \n              <!-- <img src=\"/assets/green-arrow.jpg\" class=\"imgWH\" style=\"padding-top: 37px; width: 30%;\" /> -->\n            </div>\n            \n            \n            \n            <!-- <div class=\"col-lg-1\">\n              <i class=\"fa fa-arrow-right text-center\" aria-hidden=\"true\"></i>\n            </div> -->\n          \n            <div class=\"mt-4 col-6\">\n              <app-pokemon-evolution></app-pokemon-evolution>\n            </div>\n            <!-- <p>{{pokemon | json}}</p> -->\n            <!-- <p>{{pokemon.evolution.id}}</p>  -->\n            \n          </div>\n          <div class=\"col-lg-6 mt-4\">\n            <h5 class=\"text-right\" >{{pokemon.name | uppercase}}</h5>\n          </div>\n          \n        </div>\n        \n        <div class=\"row mt-5 mb-5\">\n          <h4 class=\"text-left text-white p-2 col-12\" style=\"background-color: green;\">Damage when attacked</h4>\n          <div class=\"row mt-5\">\n            <app-pokemon-damage></app-pokemon-damage>\n          </div>\n        </div>\n      \n        <div class=\"mt-5\">\n          <div class=\"row\">\n            <div class=\"col-5\"></div>\n            <div class=\"col-2\">\n              <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"goBack()\">go back</button>\n            </div>\n            <div class=\"col-5\"></div>\n            \n          </div>\n         \n        </div>\n    </div>\n  </div>\n\n<!-- </main> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}