{"ast":null,"code":"import { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-spinner\";\nimport * as i2 from \"./loading.service\";\nfunction AppComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"ngx-spinner\", 2)(2, \"p\", 3);\n    i0.ɵɵtext(3, \" Loading... \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"fullScreen\", true);\n  }\n}\nexport class AppComponent {\n  constructor(spinner, _loading) {\n    this.spinner = spinner;\n    this._loading = _loading;\n    this.title = 'pokemon_app';\n    this.loading = false;\n  }\n  ngOnInit() {\n    /** spinner starts on init */\n    console.log();\n    this.listenToLoading();\n    // this.spinner.show();\n    // setTimeout(() => {\n    //   /** spinner ends after 5 seconds */\n    //   this.spinner.hide();\n    // }, 1000);\n  }\n  /**\n   * Listen to the loadingSub property in the LoadingService class. This drives the\n   * display of the loading spinner.\n   */\n  listenToLoading() {\n    this._loading.loadingSub.pipe(delay(0)) // This prevents a ExpressionChangedAfterItHasBeenCheckedError for subsequent requests\n    .subscribe(loading => {\n      this.loading = loading;\n      // console.log(this.loading);\n      this.spinner.show();\n    });\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.NgxSpinnerService), i0.ɵɵdirectiveInject(i2.LoadingService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"loading-container flex-content-center\", 4, \"ngIf\"], [1, \"loading-container\", \"flex-content-center\"], [\"bdColor\", \"rgba(0, 0, 0, 0.8)\", \"size\", \"medium\", \"color\", \"#fff\", \"type\", \"square-jelly-box\", 3, \"fullScreen\"], [2, \"color\", \"white\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n        i0.ɵɵtemplate(1, AppComponent_div_1_Template, 4, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,QAAQ,gBAAgB;;;;;;ICCtCC,8BAAmE;IAIjCA,4BAAW;IAAAA,iBAAI;;;IADzCA,eAAqB;IAArBA,iCAAqB;;;ADI7B,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,OAA0B,EAAUC,QAAwB;IAA5D,YAAO,GAAPD,OAAO;IAA6B,aAAQ,GAARC,QAAQ;IAHhE,UAAK,GAAG,aAAa;IACrB,YAAO,GAAY,KAAK;EAE2D;EAEnFC,QAAQ;IACN;IACAC,OAAO,CAACC,GAAG,EAAE;IACb,IAAI,CAACC,eAAe,EAAE;IACtB;IAEA;IACA;IACA;IACA;EAEF;EAEA;;;;EAICA,eAAe;IACd,IAAI,CAACJ,QAAQ,CAACK,UAAU,CACrBC,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAAA,CACfY,SAAS,CAAEC,OAAO,IAAI;MACrB,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB;MACA,IAAI,CAACT,OAAO,CAACU,IAAI,EAAE;IACrB,CAAC,CAAC;EACN;EAAC;qBA/BUZ,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAa;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCTzBlB,gCAA+B;QAE/BA,6DAMM;;;QANAA,eAAa;QAAbA,kCAAa","names":["delay","i0","AppComponent","constructor","spinner","_loading","ngOnInit","console","log","listenToLoading","loadingSub","pipe","subscribe","loading","show","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ionut/pokemon_app/src/app/app.component.ts","/Users/ionut/pokemon_app/src/app/app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { delay } from 'rxjs/operators';\nimport { LoadingService } from './loading.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pokemon_app';\n  loading: boolean = false;\n  \n  constructor(private spinner: NgxSpinnerService, private _loading: LoadingService) {}\n\n  ngOnInit() {\n    /** spinner starts on init */\n    console.log()\n    this.listenToLoading();\n    // this.spinner.show();\n\n    // setTimeout(() => {\n    //   /** spinner ends after 5 seconds */\n    //   this.spinner.hide();\n    // }, 1000);\n\n  }\n\n  /**\n   * Listen to the loadingSub property in the LoadingService class. This drives the\n   * display of the loading spinner.\n   */\n   listenToLoading(): void {\n    this._loading.loadingSub\n      .pipe(delay(0)) // This prevents a ExpressionChangedAfterItHasBeenCheckedError for subsequent requests\n      .subscribe((loading) => {\n        this.loading = loading;\n        // console.log(this.loading);\n        this.spinner.show();\n      });\n  }\n}\n","\n<router-outlet></router-outlet>\n<!-- <ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner> -->\n<div *ngIf=\"loading\" class=\"loading-container flex-content-center\">\n    <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" \n        color = \"#fff\" type = \"square-jelly-box\" \n        [fullScreen] = \"true\">\n        <p style=\"color: white\" > Loading... </p>\n    </ngx-spinner>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}