{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../pokemon-crud.service\";\nfunction PokemonSearchComponent_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"p\", 8);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", error_r2, \" \");\n  }\n}\nexport class PokemonSearchComponent {\n  constructor(pokemonCRUDService) {\n    this.pokemonCRUDService = pokemonCRUDService;\n    this.errors = [];\n  }\n  search(term) {\n    let searchTerm = document.getElementById(\"search-box\").value;\n    this.pokemonCRUDService.getSearchedPokemon(searchTerm);\n  }\n  // onEnter(term: string): void {\n  //   this.searchTerms.next(term);\n  // }\n  handleSubmit(e, term) {\n    e.preventDefault();\n    if (typeof term === 'string') {\n      if (term.length < 3) {\n        this.errors.push('The name should have at least 3 characters');\n      }\n    }\n    if (typeof term === 'number') {\n      this.errors.push('Numeric characters are not allowed');\n    }\n    if (this.errors.length < 1) {\n      this.search(term);\n    }\n  }\n  handleKeyUp(e, term) {\n    if (e.keyCode === 13) {\n      this.handleSubmit(e, term);\n    }\n  }\n  ngOnInit() {\n    // this.pokemons$ = this.searchTerms.pipe(\n    //   // wait 300ms after each keystroke before considering the term\n    //   debounceTime(300),\n    //   // ignore new term if same as previous term\n    //   distinctUntilChanged(),\n    //   // switch to new search observable each time the term changes\n    //   switchMap((term: string) => this.pokemonCRUDService.searchPokemons(term)),\n  }\n  static #_ = this.ɵfac = function PokemonSearchComponent_Factory(t) {\n    return new (t || PokemonSearchComponent)(i0.ɵɵdirectiveInject(i1.PokemonCRUDService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PokemonSearchComponent,\n    selectors: [[\"app-pokemon-search\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[1, \"form-inline\", \"my-2\", \"my-lg-0\", 2, \"float\", \"right\", 3, \"ngSubmit\"], [\"id\", \"search-component\"], [\"for\", \"search-box\"], [\"id\", \"search-box\", \"type\", \"text\", \"placeholder\", \"Search\", 1, \"form-control\", \"mr-sm-2\"], [\"searchBox\", \"\"], [1, \"search-errors\", \"pl-0\", \"ml-0\"], [\"class\", \"pl-o ml-0\", 4, \"ngFor\", \"ngForOf\"], [1, \"pl-o\", \"ml-0\"], [1, \"pl-0\", 2, \"background-color\", \"white\"]],\n    template: function PokemonSearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function PokemonSearchComponent_Template_form_ngSubmit_0_listener($event) {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(5);\n          return i0.ɵɵresetView(ctx.handleSubmit($event, _r0.value));\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Pokemon Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3, 4);\n        i0.ɵɵelementStart(6, \"ul\", 5);\n        i0.ɵɵtemplate(7, PokemonSearchComponent_li_7_Template, 3, 1, \"li\", 6);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.errors);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;IAoBIA,6BAAoD;IAE9CA,YACF;IAAAA,iBAAI;;;;IADFA,eACF;IADEA,yCACF;;;ACfR,OAAM,MAAOC,sBAAsB;EAGjCC,YAAoBC,kBAAsC;IAAtC,uBAAkB,GAAlBA,kBAAkB;IADtC,WAAM,GAAa,EAAE;EACwC;EAE7DC,MAAM,CAACC,IAAS;IACd,IAAIC,UAAU,GAAIC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAsB,CAACC,KAAK;IAClF,IAAI,CAACN,kBAAkB,CAACO,kBAAkB,CAACJ,UAAU,CAAC;EACxD;EAEA;EACA;EACA;EAEAK,YAAY,CAACC,CAAM,EAAEP,IAAS;IAC5BO,CAAC,CAACC,cAAc,EAAE;IAElB,IAAG,OAAOR,IAAI,KAAM,QAAQ,EAAC;MAC3B,IAAGA,IAAI,CAACS,MAAM,GAAG,CAAC,EAAC;QACjB,IAAI,CAACC,MAAM,CAACC,IAAI,CACd,4CAA4C,CAC7C;;;IAIL,IAAG,OAAOX,IAAI,KAAM,QAAQ,EAAC;MACzB,IAAI,CAACU,MAAM,CAACC,IAAI,CACd,oCAAoC,CACrC;;IAGL,IAAG,IAAI,CAACD,MAAM,CAACD,MAAM,GAAG,CAAC,EAAC;MACxB,IAAI,CAACV,MAAM,CAACC,IAAI,CAAC;;EAErB;EAEAY,WAAW,CAACL,CAAM,EAAEP,IAAS;IAE1B,IAAGO,CAAC,CAACM,OAAO,KAAK,EAAE,EAAC;MACjB,IAAI,CAACP,YAAY,CAACC,CAAC,EAAEP,IAAI,CAAC;;EAEhC;EAEAc,QAAQ;IACN;IACA;IACA;IAEA;IACA;IAEA;IACA;EAAA;EACD;qBArDUlB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;;QDAnCxB,+BAAiH;QAApDA;UAAAA;UAAA;UAAA,OAAYA,kDAAqC;QAAA,EAAE;QAC9GA,8BAA4B;QACJA,8BAAc;QAAAA,iBAAQ;QAM9CA,8BACkE;QAElEA,6BAAoC;QAClCA,qEAIK;QACPA,iBAAK;;;QALqCA,eAAS;QAATA,oCAAS","names":["i0","PokemonSearchComponent","constructor","pokemonCRUDService","search","term","searchTerm","document","getElementById","value","getSearchedPokemon","handleSubmit","e","preventDefault","length","errors","push","handleKeyUp","keyCode","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ionut/pokemon_app/src/app/components/pokemons/pokemon-search/pokemon-search.component.html","/Users/ionut/pokemon_app/src/app/components/pokemons/pokemon-search/pokemon-search.component.ts"],"sourcesContent":["\n<!-- move inline css to file-->\n\n<!--\n<form class=\"form-inline my-2 my-lg-0\" style=\"float: right;\"  #geeksForm=\"ngForm\"\n    (keydown)=\"enterSubmit($event, geeksForm.form)\"\n    (ngSubmit)=\"submitit(geeksForm.form);\">\n-->\n<form class=\"form-inline my-2 my-lg-0\" style=\"float: right;\" (ngSubmit)=\"handleSubmit($event, searchBox.value);\">\n  <div id=\"search-component\" >\n  <label for=\"search-box\">Pokemon Search</label>\n  <!-- \n    <input #searchBox id=\"search-box\" (input)=\"search(searchBox.value)\"  (keyup.enter)=\"onEnter(searchBox.value)\" \n    class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"/>\n  -->\n  <!-- (keyup)=\"handleKeyUp($event, searchBox.value)\"  -->\n  <input #searchBox id=\"search-box\" \n    class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" />\n    \n  <ul class=\"search-errors pl-0 ml-0\">\n    <li class=\"pl-o ml-0\" *ngFor=\"let error of errors \">\n        <p class=\"pl-0\" style=\"background-color: white;\">\n          {{error}}\n        </p>\n    </li>\n  </ul>\n\n<!-- \n  <ul class=\"search-result\">\n    <li *ngFor=\"let pokemon of pokemons$ | async\" >\n      <a routerLink=\"/detail/{{pokemon}}\">\n        {{pokemon}}\n      </a>\n    \n    </li>\n  </ul>\n-->\n</div>\n</form>","import { Component, OnInit } from '@angular/core';\nimport { PokemonCRUDService } from '../../../pokemon-crud.service';\n\n@Component({\n  selector: 'app-pokemon-search',\n  templateUrl: './pokemon-search.component.html',\n  styleUrls: ['./pokemon-search.component.css']\n})\nexport class PokemonSearchComponent implements OnInit {\n\n  errors: string[] = [];\n  constructor(private pokemonCRUDService: PokemonCRUDService) {}\n\n  search(term: any): void {\n    let searchTerm = (document.getElementById(\"search-box\") as HTMLInputElement).value;\n    this.pokemonCRUDService.getSearchedPokemon(searchTerm);\n  }\n\n  // onEnter(term: string): void {\n  //   this.searchTerms.next(term);\n  // }\n\n  handleSubmit(e: any, term: any){\n    e.preventDefault();\n    \n    if(typeof term  === 'string'){\n      if(term.length < 3){\n        this.errors.push(\n          'The name should have at least 3 characters',\n        );\n      }\n    }\n\n    if(typeof term  === 'number'){\n        this.errors.push(\n          'Numeric characters are not allowed',\n        );\n    }\n\n    if(this.errors.length < 1){\n      this.search(term);\n    }\n  }\n\n  handleKeyUp(e: any, term: any){\n   \n     if(e.keyCode === 13){\n        this.handleSubmit(e, term);\n     }\n  }\n\n  ngOnInit(): void {\n    // this.pokemons$ = this.searchTerms.pipe(\n    //   // wait 300ms after each keystroke before considering the term\n    //   debounceTime(300),\n\n    //   // ignore new term if same as previous term\n    //   distinctUntilChanged(),\n\n    //   // switch to new search observable each time the term changes\n    //   switchMap((term: string) => this.pokemonCRUDService.searchPokemons(term)),\n  }\n\n\n\n          \n          \n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}