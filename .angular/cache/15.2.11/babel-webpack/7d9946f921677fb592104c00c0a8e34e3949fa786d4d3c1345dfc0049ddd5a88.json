{"ast":null,"code":"import { forkJoin, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/pokemon-crud.service\";\nimport * as i3 from \"@angular/common\";\nfunction PokemonDamageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.special);\n  }\n}\nfunction PokemonDamageComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.status);\n  }\n}\nfunction PokemonDamageComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.physical);\n  }\n}\nexport class PokemonDamageComponent {\n  constructor(route, pokemonService) {\n    this.route = route;\n    this.pokemonService = pokemonService;\n  }\n  ngOnInit() {\n    this.getPokemonMoves();\n    this.getMovesForStatusDamageClass();\n    this.getMovesForSpecialDamageClass();\n    this.getPokMoves();\n    //  console.log(this.getMovesForSpecialDamageClassF());\n    //  this.getMovesForSpecialDamageClassF().subscribe((r)=>console.log(r));\n    //  this.getMovesForSpecialDamageClassF().subscribe((r)=> r);\n    //  this.getarray();\n    //  console.log(this.pokemonService.getTotalNumberOfPokemons());\n  }\n\n  getPokemonId() {\n    return parseInt(this.route.snapshot.paramMap.get('id'), 10);\n  }\n  getPokemonMovesF() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    var subject = new Subject();\n    let thingsArray = [];\n    this.pokemonService.getPokemon(id).subscribe(pokemon => {\n      pokemon.moves.forEach(urls => {\n        // totalQuestions=moves.url;\n        // console.log(totalQuestions);\n        thingsArray.push(Number(urls.move.url.split('/')[urls.move.url.split('/').length - 2]));\n      });\n      subject.next(thingsArray);\n      //  console.log(this.pokemon.moves);\n    });\n\n    return subject.asObservable();\n  }\n  getPokemonMoves() {\n    const id = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.pokemonService.getPokemon(id).subscribe(pokemon => {\n      this.pokemon = pokemon;\n      pokemon.moves.forEach(urls => {\n        // console.log(lists['species']['name']);\n        // this.moves = urls.move.url;\n        // this.moves.push(urls.move.url);\n        // console.log(urls.move.url);\n        // console.log(Number(urls.move.url.split('/')[urls.move.url.split('/').length - 2]));\n      });\n      //  console.log(this.pokemon.moves);\n    });\n  }\n\n  getMovesForStatusDamageClass() {\n    var subject = new Subject();\n    let thingsArray = [];\n    this.pokemonService.getMovesForStatusDamageClass().subscribe(damage => {\n      damage.moves.forEach(moves => {\n        // totalQuestions=moves.url;\n        // console.log(totalQuestions);\n        thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n      });\n      subject.next(thingsArray);\n      //  console.log(this.pokemon.moves);\n    });\n\n    this.getPokemonMovesF().subscribe(r => r.forEach(moves => {\n      if (thingsArray.includes(moves)) {\n        this.status = 'status';\n        return this.status;\n      }\n    }));\n    return subject.asObservable();\n  }\n  getMovesForPhysicalDamageClass() {\n    var subject = new Subject();\n    let thingsArray = [];\n    this.pokemonService.getMovesForPhysicalDamageClass().subscribe(damage => {\n      damage.moves.forEach(moves => {\n        // totalQuestions=moves.url;\n        // console.log(totalQuestions);\n        thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n      });\n      subject.next(thingsArray);\n      //  console.log(this.pokemon.moves);\n    });\n\n    this.getPokemonMovesF().subscribe(r => r.forEach(moves => {\n      if (thingsArray.includes(moves)) {\n        this.physical = 'physical';\n        console.log(this.physical);\n        return this.physical;\n      }\n    }));\n    return subject.asObservable();\n  }\n  // getMovesForSpecialDamageClass()\n  // {\n  //   let results =  this.pokemonService.getMovesForSpecialDamageClass()\n  //     .subscribe( (damage) => { \n  //       damage.moves.forEach( (moves: any) => {\n  //         // console.log(lists['species']['name']);\n  //         this.moves = moves.url;\n  //         // this.statusDamageMoves.push(moves.url);\n  //         // console.log(urls.move.url);\n  //         // console.log(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n  //       });\n  //     //  console.log(this.pokemon.moves);\n  //    });\n  //    return this.moves;\n  // }\n  getMovesForSpecialDamageClass() {\n    var subject = new Subject();\n    let thingsArray = [];\n    this.pokemonService.getMovesForSpecialDamageClass().subscribe(damage => {\n      damage.moves.forEach(moves => {\n        // totalQuestions=moves.url;\n        // console.log(totalQuestions);\n        thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n      });\n      subject.next(thingsArray);\n    });\n    this.getPokemonMovesF().subscribe(r => r.forEach(moves => {\n      if (thingsArray.includes(moves)) {\n        this.special = 'special';\n        return this.special;\n      }\n    }));\n    return subject.asObservable();\n  }\n  getPokMoves() {\n    forkJoin([this.pokemonService.getPokemon(this.getPokemonId()), this.pokemonService.getMovesForSpecialDamageClass(), this.pokemonService.getMovesForPhysicalDamageClass(), this.pokemonService.getMovesForStatusDamageClass()]).subscribe(res => {\n      console.log(res);\n    });\n  }\n  static #_ = this.ɵfac = function PokemonDamageComponent_Factory(t) {\n    return new (t || PokemonDamageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PokemonCRUDService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PokemonDamageComponent,\n    selectors: [[\"app-pokemon-damage\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"col-lg-12\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [1, \"mt-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"btn-lg\"]],\n    template: function PokemonDamageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"p\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, PokemonDamageComponent_div_2_Template, 3, 1, \"div\", 1);\n        i0.ɵɵtemplate(3, PokemonDamageComponent_div_3_Template, 3, 1, \"div\", 1);\n        i0.ɵɵtemplate(4, PokemonDamageComponent_div_4_Template, 3, 1, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.special);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.physical);\n      }\n    },\n    dependencies: [i3.NgIf],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["forkJoin","Subject","i0","PokemonDamageComponent","constructor","route","pokemonService","ngOnInit","getPokemonMoves","getMovesForStatusDamageClass","getMovesForSpecialDamageClass","getPokMoves","getPokemonId","parseInt","snapshot","paramMap","get","getPokemonMovesF","id","subject","thingsArray","getPokemon","subscribe","pokemon","moves","forEach","urls","push","Number","move","url","split","length","next","asObservable","damage","r","includes","status","getMovesForPhysicalDamageClass","physical","console","log","special","res","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/ionut/pokemon_app/src/app/components/pokemons/pokemon-damage/pokemon-damage.component.ts","/Users/ionut/pokemon_app/src/app/components/pokemons/pokemon-damage/pokemon-damage.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { PokemonCRUDService } from 'src/app/pokemon-crud.service';\nimport { Pokemon } from 'src/app/pokemon.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { forkJoin, map, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-pokemon-damage',\n  templateUrl: './pokemon-damage.component.html',\n  styleUrls: ['./pokemon-damage.component.css']\n})\nexport class PokemonDamageComponent implements OnInit {\n\n  pokemon!: Pokemon\n  evolves_to!: string;\n  moves!: [move: {url: string}];\n  statusDamageMoves!: [{url: string}];\n  physicalDamageMoves!: [{url: string}];\n  specialDamageMoves!: [{url: string}];\n  special!: string;\n  physical!: string;\n  status!: string;\n\n\n  constructor(\n    private route: ActivatedRoute,\n    private pokemonService: PokemonCRUDService,\n  ) {}\n\n  ngOnInit(): void {\n     this.getPokemonMoves();\n     this.getMovesForStatusDamageClass();\n     this.getMovesForSpecialDamageClass();\n     this.getPokMoves();\n    //  console.log(this.getMovesForSpecialDamageClassF());\n    //  this.getMovesForSpecialDamageClassF().subscribe((r)=>console.log(r));\n    //  this.getMovesForSpecialDamageClassF().subscribe((r)=> r);\n    //  this.getarray();\n    //  console.log(this.pokemonService.getTotalNumberOfPokemons());\n  }\n\n\n  getPokemonId(): number\n  {\n    return parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n  }\n\n  getPokemonMovesF() \n  {\n\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n    var subject = new Subject<any>();\n    let thingsArray: number[]=[];\n    this.pokemonService.getPokemon(id)\n    .subscribe( (pokemon) => { \n\n        pokemon.moves.forEach( (urls: any) => {\n          // totalQuestions=moves.url;\n          // console.log(totalQuestions);\n          thingsArray.push(Number(urls.move.url.split('/')[urls.move.url.split('/').length - 2]));\n          \n      });\n      subject.next(thingsArray);\n    //  console.log(this.pokemon.moves);\n   });\n   \n    \n    return subject.asObservable();\n  }\n\n  getPokemonMoves() \n  {\n    const id = parseInt(this.route.snapshot.paramMap.get('id')!, 10);\n\n    this.pokemonService.getPokemon(id)\n      .subscribe( (pokemon) => { \n       this.pokemon = pokemon;\n\n       pokemon.moves.forEach( (urls: any) => {\n        // console.log(lists['species']['name']);\n        // this.moves = urls.move.url;\n\n        // this.moves.push(urls.move.url);\n\n        // console.log(urls.move.url);\n        // console.log(Number(urls.move.url.split('/')[urls.move.url.split('/').length - 2]));\n      });\n\n      //  console.log(this.pokemon.moves);\n     });\n  }\n\n  getMovesForStatusDamageClass()\n  {\n      var subject = new Subject<any>();\n      let thingsArray: number[]=[];\n      this.pokemonService.getMovesForStatusDamageClass()\n      .subscribe( (damage) => { \n\n        damage.moves.forEach( (moves: any) => {\n          // totalQuestions=moves.url;\n          // console.log(totalQuestions);\n          thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n          \n      });\n      subject.next(thingsArray);\n      //  console.log(this.pokemon.moves);\n    });\n\n    this.getPokemonMovesF().subscribe((r)=> \n      \n        r.forEach( (moves: any) => {\n          if(thingsArray.includes(moves)){\n            this.status =  'status';\n            return this.status;\n          }\n        })\n      );\n     \n    return subject.asObservable();\n  }\n\n  getMovesForPhysicalDamageClass()\n  {\n    var subject = new Subject<any>();\n    let thingsArray: number[]=[];\n    this.pokemonService.getMovesForPhysicalDamageClass()\n      .subscribe( (damage) => { \n\n        damage.moves.forEach( (moves: any) => {\n          // totalQuestions=moves.url;\n          // console.log(totalQuestions);\n          thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n          \n      });\n      subject.next(thingsArray);\n      //  console.log(this.pokemon.moves);\n     });\n\n     this.getPokemonMovesF().subscribe((r)=> \n      \n        r.forEach( (moves: any) => {\n          if(thingsArray.includes(moves)){\n            this.physical =  'physical';\n            console.log(this.physical);\n            return this.physical;\n          }\n        })\n      );\n     \n    return subject.asObservable();\n  }\n\n  // getMovesForSpecialDamageClass()\n  // {\n  //   let results =  this.pokemonService.getMovesForSpecialDamageClass()\n  //     .subscribe( (damage) => { \n\n  //       damage.moves.forEach( (moves: any) => {\n  //         // console.log(lists['species']['name']);\n  //         this.moves = moves.url;\n\n  //         // this.statusDamageMoves.push(moves.url);\n  //         // console.log(urls.move.url);\n  //         // console.log(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n  //       });\n  //     //  console.log(this.pokemon.moves);\n  //    });\n  //    return this.moves;\n  // }\n\n  getMovesForSpecialDamageClass()\n  {\n      var subject = new Subject<any>();\n      let thingsArray: number[]=[];\n      this.pokemonService.getMovesForSpecialDamageClass()\n      .subscribe( (damage) => { \n\n          damage.moves.forEach( (moves: any) => {\n            // totalQuestions=moves.url;\n            // console.log(totalQuestions);\n            thingsArray.push(Number(moves.url.split('/')[moves.url.split('/').length - 2]));\n            \n        });\n        subject.next(thingsArray);\n      \n     });\n\n      this.getPokemonMovesF().subscribe((r)=> \n      \n        r.forEach( (moves: any) => {\n          if(thingsArray.includes(moves)){\n            this.special =  'special';\n            return this.special;\n          }\n        })\n      );\n     \n    return subject.asObservable();\n  }\n\n  getPokMoves()\n  {\n    forkJoin([\n      this.pokemonService.getPokemon(this.getPokemonId()),\n      this.pokemonService.getMovesForSpecialDamageClass(),\n      this.pokemonService.getMovesForPhysicalDamageClass(),\n      this.pokemonService.getMovesForStatusDamageClass()\n    ]).subscribe((res: any) => {\n      console.log(res);\n        \n\n      });\n  }\n\n}\n\n","<p></p>\n<!-- <h1>{{moves}}</h1> -->\n<div class=\"col-lg-12\">\n    <div class=\"mt-2\" *ngIf=\"special\">\n        <button type=\"button\"  class=\"btn btn-secondary btn-lg\">{{special}}</button>\n    </div>\n    <div class=\"mt-2\" *ngIf=\"status\">\n        <button type=\"button\" class=\"btn btn-secondary btn-lg\">{{status}}</button>\n    </div>\n    <div class=\"mt-2\" *ngIf=\"physical\">\n        <button type=\"button\" class=\"btn btn-secondary btn-lg\">{{physical}}</button>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}